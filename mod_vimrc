" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.
" This happens after /etc/vim/vimrc(.local) are loaded, so it will override
" any settings in these files.
" If you don't want that to happen, uncomment the below line to prevent
" defaults.vim from being loaded.
" let g:skip_defaults_vim = 1

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
 au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" Custom key maps

:set mouse=a
:set hlsearch
:set autoindent
:set ignorecase
:set incsearch
:set smartcase
:set linebreak
:set wrap
" :set laststatus=2
:set scrolloff=1
:set sidescrolloff=5
" :set ruler
:set wildmenu
:set number
" :set title
:set background=dark
:set history=1000
:set nomodeline
:set noerrorbells
:set encoding=UTF-8
:set guifont=MesloLGSDZ\ Nerd\ Font\ 11
" :set shell
:set expandtab
:set visualbell
:set formatoptions+=j
:set tabpagemax=50
:set shiftround
:set shiftwidth=4
:set smarttab
:set tabstop=4
syntax on
syntax enable
filetype plugin indent on

let g:netrw_banner = 0
let g:netrw_browse_split = 2
let g:netrw_winsize = 25

	" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

"Customization of vimrc -- added by pugin manager/plugins: vim-plug

 if empty(glob('~/.vim/autoload/plug.vim'))
   silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
   autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
 endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)')) | PlugInstall --sync | source $MYVIMRC | endif

" Plugin collection

call plug#begin('~/.vim/plugged')
Plug 'morhetz/gruvbox'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'mhinz/vim-startify'
Plug 'preservim/tagbar'
" ---- Always load the vim-devicons as the very last one.
Plug 'ryanoasis/vim-devicons'
Plug 'bagrat/vim-buffet'
call plug#end()

" Additional setup for installed Plugins
"
" vim-airline
let g:gruvbox_italic=1
colorscheme gruvbox
let g:airline_theme='gruvbox'
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

let g:airline_statusline_ontop=1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline#extensions#tabline#formatter = 'unique_tail_improved'

nmap <leader>1 <Plug>BuffetSwitch(1)
nmap <leader>2 <Plug>BuffetSwitch(2)
nmap <leader>3 <Plug>BuffetSwitch(3)
nmap <leader>4 <Plug>BuffetSwitch(4)
nmap <leader>5 <Plug>BuffetSwitch(5)
nmap <leader>6 <Plug>BuffetSwitch(6)
nmap <leader>7 <Plug>BuffetSwitch(7)
nmap <leader>8 <Plug>BuffetSwitch(8)
nmap <leader>9 <Plug>BuffetSwitch(9)
nmap <leader>0 <Plug>BuffetSwitch(10)

let g:buffet_always_show_tabline=1
let g:buffet_powerline_separators=1
let g:buffet_separator=''
let g:buffet_show_index=0
let g:buffet_max_plug=10
let g:buffet_use_devicons=1
let g:buffet_tab_icon ='â–¾'
let g:buffet_new_buffer_name='*'
let g:buffet_modified_icon='+'
let g:buffet_left_trun_icon='<'
let g:buffet_right_trun_icon='>'

noremap <Tab> :bn<CR>
noremap <S-Tab> :bp<CR>
noremap <Leader><Tab> :Bw<CR>
noremap <Leader><S-Tab> :Bw!<CR>
noremap <C-t> :tabnew split<CR>
